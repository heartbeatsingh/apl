<!DOCTYPE html>
<html lang="en-us">
	<head>
		<meta charset="utf-8">
		<!--<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">-->

		<title> Antier Premier League </title>
		<meta name="description" content="">
		<meta name="author" content="">
			
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<!-- Basic Styles -->
		<link rel="stylesheet" type="text/css" media="screen" href="/css/bootstrap.min.css">
		<link rel="stylesheet" type="text/css" media="screen" href="/css/font-awesome.min.css">

		<!-- SmartAdmin Styles : Please note (smartadmin-production.css) was created using LESS variables -->
		<link rel="stylesheet" type="text/css" media="screen" href="/css/smartadmin-production.min.css">
		<link rel="stylesheet" type="text/css" media="screen" href="/css/smartadmin-skins.min.css">

		

		<!-- We recommend you use "your_style.css" to override SmartAdmin
		     specific styles this will also ensure you retrain your customization with each SmartAdmin update.
		<link rel="stylesheet" type="text/css" media="screen" href="/css/your_style.css"> -->

		<!-- Demo purpose only: goes with demo.js, you can delete this css when designing your own WebApp -->
		<link rel="stylesheet" type="text/css" media="screen" href="/css/demo.min.css">

		<!-- FAVICONS -->
		<link rel="shortcut icon" href="/img/favicon/favicon.ico" type="image/x-icon">
		<link rel="icon" href="/img/favicon/favicon.ico" type="image/x-icon">

		<!-- GOOGLE FONT -->
		<link rel="stylesheet" href="/http://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,300,400,700">

		<!-- Specifying a Webpage Icon for Web Clip 
			 Ref: https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html -->
		<link rel="apple-touch-icon" href="/img/splash/sptouch-icon-iphone.png">
		<link rel="apple-touch-icon" sizes="76x76" href="/img/splash/touch-icon-ipad.png">
		<link rel="apple-touch-icon" sizes="120x120" href="/img/splash/touch-icon-iphone-retina.png">
		<link rel="apple-touch-icon" sizes="152x152" href="/img/splash/touch-icon-ipad-retina.png">
		
		<!-- iOS web-app metas : hides Safari UI Components and Changes Status Bar Appearance -->
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
		
		<!-- Startup image for web apps -->
		<link rel="apple-touch-startup-image" href="/img/splash/ipad-landscape.png" media="screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:landscape)">
		<link rel="apple-touch-startup-image" href="/img/splash/ipad-portrait.png" media="screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation:portrait)">
		<link rel="apple-touch-startup-image" href="/img/splash/iphone.png" media="screen and (max-device-width: 320px)">
			<style type="text/css">			
			.slider-track{height: 50px !important;}
								@-webkit-keyframes invalid {
					from { background-color: #03570A; }
					to { background-color: inherit; }
					}
					@-moz-keyframes invalid {
					from { background-color: #03570A; }
					to { background-color: inherit; }
					}
					@-o-keyframes invalid {
					from { background-color: #03570A; }
					to { background-color: inherit; }
					}
					@keyframes invalid {
					from { background-color: #03570A; }
					to { background-color: inherit; }
					}
					.invalid {
					-webkit-animation: invalid 1s infinite; /* Safari 4+ */
					-moz-animation:    invalid 1s infinite; /* Fx 5+ */
					-o-animation:      invalid 1s infinite; /* Opera 12+ */
					animation:         invalid 1s infinite; /* IE 10+ */
					}

			</style>
	</head>
	<body class="desktop-detected menu-on-top pace-done mobile-view-activated">
		<!-- possible classes: minified, fixed-ribbon, fixed-header, fixed-width-->

		<!-- HEADER -->
		<header id="header">
				<%- include elements/header.ejs %>
		</header>
		<!-- END HEADER -->

		<!-- Left panel : Navigation area -->
		<!-- Note: This width of the aside area can be adjusted through LESS variables -->
		<aside id="left-panel">
				<%- include elements/nav.ejs %>			
		</aside>
		<!-- END NAVIGATION -->

		<!-- MAIN PANEL -->
		<div id="main" role="main">

			<!-- RIBBON -->
			<div id="ribbon">
					<span class="ribbon-button-alignment"> 
							<span id="refresh" class="btn btn-ribbon" data-action="resetWidgets" data-title="refresh"  rel="tooltip" data-placement="bottom" data-original-title="<i class='text-warning fa fa-warning'></i> Warning! This will reset all your widget settings." data-html="true">
								<i class="fa fa-refresh"></i>
							</span> 
						</span>
					
						<!-- breadcrumb -->
						<ol class="breadcrumb">
							<li>Home</li><li>Inbox</li>
						</ol>
						<!-- end breadcrumb -->
					
						<!-- You can also add more buttons to the
						ribbon for further usability
					
						Example below:
					
						<span class="ribbon-button-alignment pull-right">
						<span id="search" class="btn btn-ribbon hidden-xs" data-title="search"><i class="fa-grid"></i> Change Grid</span>
						<span id="add" class="btn btn-ribbon hidden-xs" data-title="add"><i class="fa-plus"></i> Add</span>
						<span id="search" class="btn btn-ribbon" data-title="search"><i class="fa-search"></i> <span class="hidden-mobile">Search</span></span>
						</span> -->
					
				
			</div>
			<!-- END RIBBON -->

			<!-- MAIN CONTENT -->
			<div id="content">
					<% if(typeof flashs != 'undefined' && flashs.fmSuccess.length > 0){ %>
						<div class="alert alert-success fade in">
							<button class="close" data-dismiss="alert">
								×
							</button>
							<i class="fa-fw fa fa-check"></i>
							<strong>Success</strong> <%- flashs.fmSuccess %>
						</div>
					<% } %>
					<% if(typeof flashs != 'undefined'  && flashs.fmError.length > 0){ %>
						<div class="alert alert-error fade in">
							<button class="close" data-dismiss="alert">
								×
							</button>
							<i class="fa-fw fa fa-times"></i>
							<strong>Error</strong> <%- flashs.fmError %>
						</div>
					<% } %>

					<%- include('../modules/'+main.module+'/views/'+main.file, {			
						results:(typeof content != 'undefined') ? content.results : "",
						row:(typeof content != 'undefined') ? content.row : "",
						flashs: (typeof flashs != 'undefined') ? flashs : ""						
					}); %>

			</div>
			<!-- END MAIN CONTENT -->

		</div>
		<!-- END MAIN PANEL -->

		<!-- PAGE FOOTER -->
		<div class="page-footer">
				<%- include('elements/footer'); %>
		</div>
		<!-- END PAGE FOOTER -->

		
		<!--================================================== -->

		<%- include('elements/js/common'); %>
		<script>
			$(document).ready(function() {
				$("#generateNewAc").click(function () {
					$.ajax({
					type: 'POST',
					url: '/crypto/generateAddress',
					success: function(result) {
						console.log(result);
						$("#ethAc").val(result.address);
						$("#ethAcPk").val(result.privateKey);
						$("#ethAcNote").hide();
					}
					});
				});	
				// DO NOT REMOVE : GLOBAL FUNCTIONS!
				pageSetUp();

			});
		</script>
	
	<%- include('elements/js/dt'); %>
	<%- include('elements/js/players'); %>
	<%- include('elements/js/auct'); %>
	<%- include('elements/js/sckt'); %>

	<script>
	$(document).ready(function(){
		
				/*
				* RUN PAGE GRAPHS
				*/
				/* TAB 1: UPDATING CHART */
				// For the demo we use generated data, but normally it would be coming from the server
				var data = [], totalPoints = 200, $UpdatingChartColors = $("#updating-chart").css('color');
				function getRandomData() {
					if (data.length > 0)
						data = data.slice(1);
					// do a random walk
					while (data.length < totalPoints) {
						var prev = data.length > 0 ? data[data.length - 1] : 50;
						var y = prev + Math.random() * 10 - 5;
						if (y < 0)
							y = 0;
						if (y > 100)
							y = 100;
						data.push(y);
					}
					// zip the generated y values with the x values
					var res = [];
					for (var i = 0; i < data.length; ++i)
						res.push([i, data[i]])
					return res;
				}
				// setup control widget
				var updateInterval = 1500;
				$("#updating-chart").val(updateInterval).change(function() {
					var v = $(this).val();
					if (v && !isNaN(+v)) {
						updateInterval = +v;
						$(this).val("" + updateInterval);
					}
				});
				// setup plot
				var options = {
					yaxis : {
						min : 0,
						max : 100
					},
					xaxis : {
						min : 0,
						max : 100
					},
					colors : [$UpdatingChartColors],
					series : {
						lines : {
							lineWidth : 1,
							fill : true,
							fillColor : {
								colors : [{
									opacity : 0.4
								}, {
									opacity : 0
								}]
							},
							steps : false
						}
					}
				};
				var plot = $.plot($("#updating-chart"), [getRandomData()], options);
				
				/* live switch */
				$('input[type="checkbox"]#start_interval').click(function() {
					if ($(this).prop('checked')) {
						$on = true;
						updateInterval = 1500;
						update();
					} else {
						clearInterval(updateInterval);
						$on = false;
					}
				});
				function update() {
					if ($on == true) {
						plot.setData([getRandomData()]);
						plot.draw();
						setTimeout(update, updateInterval);
					} else {
						clearInterval(updateInterval)
					}
				}
			
	
	});
	</script>

	</body>

</html>